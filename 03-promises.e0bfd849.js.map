{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SAEnCC,EAAa,EACbC,EAAiB,EACjBC,EAAkB,EAwBtB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPR,EAAQe,iBAAiB,UAnCJ,SAAAC,GACnBA,EAAEC,iBAEF,IAAgCC,EAAAlB,EAAQmB,SAAhCC,EAAwBF,EAAxBV,MAAOa,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAErBnB,EAAaoB,OAAOH,EAAMI,OAC1BpB,EAAiBmB,OAAOF,EAAKG,OAC7BnB,EAAkBkB,OAAOD,EAAOE,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKpB,EAAiBoB,GAAK,EACzCnB,EAAcmB,EAAGtB,GACduB,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBV,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBV,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAG9DL,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nlet delayValue = 0;\nlet stepDelayValue = 0;\nlet maxCounterValue = 0;\n\nconst onFormSubmit = e => {\n  e.preventDefault();\n\n  const { delay, step, amount } = formRef.elements;\n\n  delayValue = Number(delay.value);\n  stepDelayValue = Number(step.value);\n  maxCounterValue = Number(amount.value);\n\n  for (let i = 1; i <= maxCounterValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayValue += stepDelayValue;\n  }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepDelayValue","$ce04d3a99e08e73b$var$maxCounterValue","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","_elements","elements","delay1","step","amount","Number","value","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.e0bfd849.js.map"}