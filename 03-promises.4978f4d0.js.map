{"mappings":"oeAAAA,EAAA,SAEAC,QAAUC,SAASC,cAAc,SAEjC,IAAIC,EAAiB,EACjBC,EAAa,EACbC,EAAiB,EACjBC,EAAkB,EAsDtBN,QAAQO,iBAAiB,UApDzB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWZ,QAAQa,SAExCT,EAAaM,EAAMI,MACnBT,EAAiBM,EAAKG,MACtBR,EAAkBM,EAAOE,MAK3B,SAAuBC,EAAUL,GAC/BM,QAAQC,IAAI,cAAeb,GAC3BY,QAAQC,IAAI,kBAAmBd,GAE/B,MAAMe,EAAgBC,KAAKC,SAAW,GAGtC,GAAIjB,EAAiBG,EAEnB,YADAU,QAAQC,IAAI,uBAMdI,aAAY,KACM,IAAIC,SAAQ,CAACC,EAASC,KAChCN,EACFK,EAAQ,uBAAqBR,QAAiBL,OAE5Cc,EAAK,sBAAoBT,QAAeL,MAAU,IAOrDe,MAAKC,IACJV,QAAQC,IAAIS,EAAO,IAEpBC,OAAMC,IACLZ,QAAQC,IAAIW,EAAM,IAItBzB,GAAkB,EAElBC,GAAcC,EACdW,QAAQC,IAAI,aAAcF,EAAS,GAClCX,E,CAzCHyB,CAAc1B,EAAgBC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nformRef = document.querySelector('.form');\n\nlet promiseCounter = 1;\nlet delayValue = 0;\nlet stepDelayValue = 0;\nlet maxCounterValue = 0;\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = formRef.elements;\n\n  delayValue = delay.value;\n  stepDelayValue = step.value;\n  maxCounterValue = amount.value;\n\n  createPromise(promiseCounter, delayValue);\n}\n\nfunction createPromise(position, delay) {\n  console.log('delayValue:', delayValue);\n  console.log('promiseCounter:', promiseCounter);\n\n  const shouldResolve = Math.random() > 0.3;\n\n  // TEST IF PROMISE POSITION IS LESS THEN AMOUNT\n  if (promiseCounter > maxCounterValue) {\n    console.log(\"don't make promises\");\n    return;\n  }\n  // **********************************\n\n  //  PROMISE EXAMPLE***********\n  setInterval(() => {\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    });\n    // ***********************************\n\n    // THEN & CATCH OF PROMISE\n    promise\n      .then(result => {\n        console.log(result);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    // ***********************************\n\n    promiseCounter += 1;\n\n    delayValue += stepDelayValue;\n    console.log('position2:', position);\n  }, delayValue);\n}\n\nformRef.addEventListener('submit', onFormSubmit);\n"],"names":["parcelRequire","formRef","document","querySelector","$47d4ff9957288465$var$promiseCounter","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepDelayValue","$47d4ff9957288465$var$maxCounterValue","addEventListener","e","preventDefault","delay","step","amount","elements","value","position","console","log","shouldResolve","Math","random","setInterval","Promise","resolve","reject","then","result","catch","error","$47d4ff9957288465$var$createPromise"],"version":3,"file":"03-promises.4978f4d0.js.map"}